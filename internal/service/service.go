package service

import (
	"github.com/ronaksoft/ronykit"
	"github.com/ronaksoft/ronykit/std/bundle/rest"
	"github.com/ronaksoft/ronykit/std/contract"
	"github.com/ronaksoft/ronykit/std/service"
)

/*
   This Code is Auto-Generated by RonyDESC. Please DO NOT EDIT.
   Generated at:
*/

// IServiceA define the interface which MUST be implemented.
type IServiceA interface {
	Echo(ctx *ronykit.Context)
}

// serviceaWrapper
type serviceaWrapper struct {
	svc IServiceA
}

func (x serviceaWrapper) echoContract() ronykit.Contract {
	return contract.New().
		SetSelector(
			rest.Route("GET", "/echo/:randomID").
				WithFactory(
					func() ronykit.Message {
						return &EchoRequest{}
					},
				),
		).
		SetHandler(x.svc.Echo)
}

func (x serviceaWrapper) Service() ronykit.Service {
	return service.New("ServiceA").
		AddContract(x.echoContract()).
		SetPreHandlers()
}
